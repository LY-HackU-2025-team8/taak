openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: diaries
  description: the diaries API
paths:
  /diaries/{id}:
    get:
      tags:
      - diaries
      summary: 日記の取得
      operationId: diariesIdGet
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
        "404":
          description: 見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
    put:
      tags:
      - diaries
      summary: 日記の更新
      operationId: diariesIdPut
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiaryRequest"
        required: true
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
        "404":
          description: 見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
    delete:
      tags:
      - diaries
      summary: 日記の削除
      operationId: diariesIdDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: 削除成功（レスポンスボディなし）
        "404":
          description: 見つかりません
      security:
      - bearerAuth: []
  /login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
  /diaries:
    get:
      tags:
      - diaries
      summary: 日記一覧取得
      description: ユーザーに紐づく日記の一覧を返す
      operationId: diariesGet
      responses:
        "200":
          description: 一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiarySummary"
      security:
      - bearerAuth: []
    post:
      tags:
      - diaries
      summary: 日記の新規作成
      operationId: diariesPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiaryRequest"
        required: true
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
  /auth-check:
    get:
      tags:
      - api-controller
      operationId: getAuthenticatedUsername
      parameters:
      - name: param
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - api-controller
      operationId: getAuthenticatedUsernamePost
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /:
    get:
      tags:
      - api-controller
      operationId: Hello
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    DiaryResponse:
      type: object
      properties:
        title:
          type: string
          example: プログラミング
        body:
          type: string
          example: たくさんコードを書いた
        date:
          type: string
          format: date
          example: 2025-05-18
        id:
          type: integer
          format: int32
          example: 123
      required:
      - body
      - date
      - id
      - title
    DiaryRequest:
      type: object
      properties:
        title:
          type: string
          example: プログラミング
        body:
          type: string
          example: たくさんコードを書いた
        date:
          type: string
          format: date
          example: 2025-05-18
      required:
      - body
      - date
      - title
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    DiarySummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: お出かけ
      required:
      - id
      - title
