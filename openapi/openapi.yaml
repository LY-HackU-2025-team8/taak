openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: diaries
  description: the diaries API
paths:
  /tasks/{taskId}:
    get:
      tags:
      - task-controller
      operationId: getTaskDetail
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
    put:
      tags:
      - task-controller
      operationId: updateTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
        required: true
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /diaries/{id}:
    get:
      tags:
      - diaries
      summary: 日記の取得
      operationId: diariesIdGet
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
        "404":
          description: 見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
    put:
      tags:
      - diaries
      summary: 日記の更新
      operationId: diariesIdPut
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiaryRequest"
        required: true
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
        "404":
          description: 見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
    delete:
      tags:
      - diaries
      summary: 日記の削除
      operationId: diariesIdDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "204":
          description: 削除成功（レスポンスボディなし）
        "404":
          description: 見つかりません
      security:
      - bearerAuth: []
  /tasks:
    get:
      tags:
      - task-controller
      operationId: getTask
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskResponse"
    post:
      tags:
      - task-controller
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
        required: true
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
  /login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /diaries:
    get:
      tags:
      - diaries
      summary: 日記一覧取得
      description: ユーザーに紐づく日記の一覧を返す
      operationId: diariesGet
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: 一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiarySummary"
      security:
      - bearerAuth: []
    post:
      tags:
      - diaries
      summary: 日記の新規作成
      operationId: diariesPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiaryRequest"
        required: true
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryResponse"
      security:
      - bearerAuth: []
  /users/me:
    get:
      tags:
      - login-controller
      operationId: userInfo
      responses:
        default:
          description: exception
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UsersResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      description: エラー時のレスポンス
      properties:
        message:
          type: string
    TaskRequest:
      type: object
      properties:
        title:
          type: string
        memo:
          type: string
        dueAt:
          type: string
          format: date-time
        isAllDay:
          type: boolean
        completedAt:
          type: string
          format: date-time
        loadScore:
          type: integer
          format: int32
    DiaryResponse:
      type: object
      properties:
        title:
          type: string
          example: プログラミング
        body:
          type: string
          example: たくさんコードを書いた
        date:
          type: string
          format: date
          example: 2025-05-18
        id:
          type: integer
          format: int32
          example: 123
      required:
      - body
      - date
      - id
      - title
    DiaryRequest:
      type: object
      properties:
        title:
          type: string
          example: プログラミング
        body:
          type: string
          example: たくさんコードを書いた
        date:
          type: string
          format: date
          example: 2025-05-18
      required:
      - body
      - date
      - title
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        memo:
          type: string
        dueAt:
          type: string
          format: date-time
        isAllDay:
          type: boolean
        completedAt:
          type: string
          format: date-time
        loadScore:
          type: integer
          format: int32
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: "#/components/schemas/UsersResponse"
    UsersResponse:
      type: object
      properties:
        username:
          type: string
        nickname:
          type: string
        id:
          type: integer
          format: int64
    DiarySummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: お出かけ
      required:
      - id
      - title
