/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as AuthImport } from './app/routes/_auth'
import { Route as AppImport } from './app/routes/_app'
import { Route as IndexImport } from './app/routes/index'
import { Route as AuthLoginImport } from './app/routes/_auth/login'
import { Route as AppTodoImport } from './app/routes/_app/todo'
import { Route as AppDiaryImport } from './app/routes/_app/diary'
import { Route as AppDashboardImport } from './app/routes/_app/dashboard'
import { Route as AppAccountImport } from './app/routes/_app/account'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppTodoRoute = AppTodoImport.update({
  id: '/todo',
  path: '/todo',
  getParentRoute: () => AppRoute,
} as any)

const AppDiaryRoute = AppDiaryImport.update({
  id: '/diary',
  path: '/diary',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountRoute = AppAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/account': {
      id: '/_app/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountImport
      parentRoute: typeof AppImport
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppImport
    }
    '/_app/diary': {
      id: '/_app/diary'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof AppDiaryImport
      parentRoute: typeof AppImport
    }
    '/_app/todo': {
      id: '/_app/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof AppTodoImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppAccountRoute: typeof AppAccountRoute
  AppDashboardRoute: typeof AppDashboardRoute
  AppDiaryRoute: typeof AppDiaryRoute
  AppTodoRoute: typeof AppTodoRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAccountRoute: AppAccountRoute,
  AppDashboardRoute: AppDashboardRoute,
  AppDiaryRoute: AppDiaryRoute,
  AppTodoRoute: AppTodoRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/account': typeof AppAccountRoute
  '/dashboard': typeof AppDashboardRoute
  '/diary': typeof AppDiaryRoute
  '/todo': typeof AppTodoRoute
  '/login': typeof AuthLoginRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/account': typeof AppAccountRoute
  '/dashboard': typeof AppDashboardRoute
  '/diary': typeof AppDiaryRoute
  '/todo': typeof AppTodoRoute
  '/login': typeof AuthLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/account': typeof AppAccountRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/diary': typeof AppDiaryRoute
  '/_app/todo': typeof AppTodoRoute
  '/_auth/login': typeof AuthLoginRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/account'
    | '/dashboard'
    | '/diary'
    | '/todo'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/account' | '/dashboard' | '/diary' | '/todo' | '/login'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/account'
    | '/_app/dashboard'
    | '/_app/diary'
    | '/_app/todo'
    | '/_auth/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/account",
        "/_app/dashboard",
        "/_app/diary",
        "/_app/todo"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_app/account": {
      "filePath": "_app/account.tsx",
      "parent": "/_app"
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_app/diary": {
      "filePath": "_app/diary.tsx",
      "parent": "/_app"
    },
    "/_app/todo": {
      "filePath": "_app/todo.tsx",
      "parent": "/_app"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
